name: GitHub Actions Demo
on: 
  push:
    branches: [ master ]

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.vars.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Validate
        run: |
          sam validate
      
      - name: Configure variables
        shell: bash
        id: vars
        env:
          REPO: ${{ github.event.repository.name }}
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
        run: |
          # Set variables
          BRANCH=${REF#refs/heads/}
          REPOSITORY=`echo $REPO | tr "/" "-"`
          ENVIRONMENT=$BRANCH-$REPOSITORY
          # In this step we are setting variables and persistenting them
          # into the environment so that they can be utilized in other steps
          echo "::set-output name=branch::$BRANCH"
          echo "::set-output name=repository::$REPOSITORY"
          echo "::set-output name=environment::$ENVIRONMENT"
          # Output variables to ensure their values are set correctly when ran
          echo "The region is ${{ secrets.AWS_REGION }}"
          echo "The repository is $REPOSITORY"
          echo "The environment is $ENVIRONMENT"
          echo "The branch is $BRANCH"
      - name: SAM Build
        run: |
          sam build --beta-features

      - name: Restore packages
        run: |
          npm ci

      - name: Run unit tests
        run: |
          npm test

      - name: Install zip
        if: github.ref == 'refs/heads/master'
        uses: montudor/action-zip@v1

      - name: Zip build artifact
        run: zip -qq -r build.zip .aws-sam
        if: github.ref == 'refs/heads/master'

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/master'
        with:
          name: build-artifact
          path: build.zip

  Deploy:
      runs-on: ubuntu-latest
      needs: Build
      if: github.ref == 'refs/heads/master'
      steps:
        - uses: actions/download-artifact@v3
          with:
            name: build-artifact

        - uses: montudor/action-zip@v1
          with:
            args: unzip -qq build.zip -d artifact

        - name: Configure AWS credentials
          id: creds
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Create S3 Bucket
          run: |
            # Create S3 Bucket to store code
            aws s3api head-bucket --bucket "${{ needs.Build.outputs.env-name.lowercase() }}" 2>/dev/null \
            || aws s3 mb s3://${{ needs.Build.outputs.env-name.lowercase() }}

        - name: Deploy Lambda
          working-directory: artifact
          run: |
            # Run SAM Deploy
            sam deploy --template-file .aws-sam/build/template.yaml \
              --stack-name ${{ needs.Build.outputs.env-name }} \
              --s3-bucket ${{ needs.Build.outputs.env-name }} \
              --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM